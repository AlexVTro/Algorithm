<?xml version="1.0" encoding="UTF-8"?>
<xml>
  <file>
    <title>Master complex actions</title>
    <breadcumbs>
      <text>
        <link file="Environment.html"> development environment </link> -&gt; <link file="Environment/Master.html"> Master complex actions </link></text>
    </breadcumbs>
    <descriptionarticle>
      <p>
        <text>
          <b> Master complex action </b> is the most difficult part of the IDE algorithm, but it offers tremendous opportunities  to create a variety of software solutions.</text>
      </p>
      <textAll>
        <p> The installation wizard buttons with <b> magic wand </b>, which are located on the right of the text fields (eg <link file="Environment/ActionPart.html"> Section Action </link>. </p>
        <p> Let us consider the process of creating a complex action on the example of calculating how many years have passed since imposed <link file="Objects/Text.html"> text field </link> year: <imgMy src="Master.jpg"></imgMy></p>
        <p> Here glued (or merged with another) string "passed years:" with the result of calculation, in which year imposed <link file="Objects/Text.html"> text box </link> ( Window1.Tekst1.Tekst) subtracted <link file="UsefulObjects/_Date/PropertiesCommands/Today.html"> current year </link>. For example, if a text box, enter "2000" and now "2009" year, result of a complex action, which is created in the wizard will: "It has been years: -9", because "2000" - "2009" will be "-9". If we click <b> OK </b> the wizard will give us the result  its work. This is a complex action, in this case: <i> "It took years:"&amp;(Module (Window1.Tekst1.Tekst) - _Useful objects._Data._Year (_Useful objects._Data._Today)) </i></p>
        <p> Now consider each element separately Wizard: </p>
        <p>
          <table>
            <tbody>
              <tr>
                <td>
                  <text>
                    <b> 1 - Power Wizard </b>
                  </text>
                </td>
                <td>
                  <text>
                    <p> Wizard consists of <b> blocks </b>, of which complex actions are going. block can be any number, they <b> added </b> button <b> 2 </b> and <b> deleted </b> button <b> 4 </b>. </p>
                    <p> Each <b> unit </b> can be in two states: a simple  - when you simply enter data (such as in the first block in the figure) and in the complex - where you can select the properties of an object (the second and third block of the figure). A change of these button state <b> 6 </b>. </p>
                  </text>
                </td>
              </tr>
              <tr>
                <td>
                  <text>
                    <b> 2 - Add a block </b>
                  </text>
                </td>
                <td>
                  <text>
                    <p> This button adds  a new block at the place where this button is located. </p>
                  </text>
                </td>
              </tr>
              <tr>
                <td>
                  <text>
                    <b> 3 - Setting the brackets </b>
                  </text>
                </td>
                <td>
                  <text>
                    <p> Each unit has the opportunity to segregate its brackets. There is a <b> Left </b> and <b> right </b> brackets, their number is not limited  and the number of left may differ from the number of rules. For example, if you want the wizard to create an action ((-2 ") +" 3 "), in the first block (which will be the number" -2 ") must choose 2 left brackets and 1 right. And in the second block (which will be the number 3) to select 1 of the bracket. </p>
                  </text>
                </td>
              </tr>
              <tr>
                <td>
                  <text>
                    <b> 4 - Remove the block </b>
                  </text>
                </td>
                <td>
                  <text>
                    <p> This button removes  block. </p>
                  </text>
                </td>
              </tr>
              <tr>
                <td>
                  <text>
                    <b> 5 - Additional feature </b>
                  </text>
                </td>
                <td>
                  <text>
                    <p> Each block can be further processed <b> function </b>. All the additional features are <b> conventional mathematical </b> operation - the root, sine, cosine, rounding, change the sign. In this case, the block number 2 is used <b> function module </b> (function converts a negative into a positive number) in case impose such "-2000". =) </p>
                  </text>
                </td>
              </tr>
              <tr>
                <td>
                  <text>
                    <b> 6 - Change of block </b>
                  </text>
                </td>
                <td>
                  <text>
                    <p> Each <b> Block </b> can be in two states: in <b> simple </b> - when you simply enter data (such as in the first block in the figure) and <b> complex </b> - where you can select the object properties (second and third block of the figure). This button and change  of the block with a simple to complex and vice versa. </p>
                  </text>
                </td>
              </tr>
              <tr>
                <td>
                  <text>
                    <b> 7 - Communication units </b>
                  </text>
                </td>
                <td>
                  <text>
                    <p> All units are connected with each other <b> definite link </b>. Communication is <b> mathematical </b> (addition, division, adhesion) and <b> logical </b> (unevenly, more, less, _AND, _ANDLI). </p>
                    <p> In this case, we <b> mathematical connection </b>, ie blocks linked some mathematical operation, in this case, the 2nd and 3rd block <b> linked subtraction </b>. Thus, the block number 2 is <b> minuend </b>, and the block number 3 <b> subtrahend </b>. Between blocks 1 and the difference between blocks 2 and 3 is <b> plus </b>, so they are linked <b> adding </b> and the result of the sum will be  terms <i> block number 1 </i> and <i> (block number 2 - unit number 3) </i>. </p>
                    <p> addition to mathematical connection exists <b> logical </b> (equal, unequal, greater, less or equal to). It will come in handy when creating <link file="Environment/IfPart.html"> conditions </link> and <link file="Environment/CyclePart.html"> cycles </link>. It is the result of conditions or that the condition <b> true </b>, or that the condition <b> true </b>. So if you want to create a condition, then use the logical operators, which expressly indicate <b> either "Yes" </b>, <b> or "No" </b>. For example, the expression "2" &lt; "3" will be either correct the condition, or incorrect. The other <b> not given </b>. In this case it is true. </p>
                    <p> In addition, if the condition is complicated , then use a special logic operations: <b> _AND </b> and <b> _ANDLI </b>. If the relationship between the two conditions <b> _AND </b>, then the overall result they will be "Yes" (ie, together they will be loyal to the condition) only when both conditions are true . For example, if you want to check that the number entered in the text field was greater than 5 and less than 10, then in the wizard it would look like this: </p>
                    <p>
                      <imgMy src="Master2.jpg">
                      </imgMy>
                    </p>
                    <p> Similarly, the combined effect of two conditions with communication <b> _ANDLI </b> will correct the condition when <b> At least one of the conditions right </b>. For example, if you want to check that the number entered in the text field was less than 2 or more 7, then in the wizard it would look like this: <i> Window1.Window1.Tekst &lt; "2" _ANDLI Window1.Tekst1.Tekst&gt; "7" </i></p>
                  </text>
                </td>
              </tr>
            </tbody>
          </table>
        </p>
      </textAll>
    </descriptionarticle>
    <seealso>
      <est />
      <link file="Environment.html"> development environment </link>
      <br />
      <link file="Objects.html"> Objects </link>
      <br />
      <link file="Environment/IfPart.html "> Terms </link>
      <link file="Environment/CyclePart.html"> Cycles </link>
    </seealso>
  </file>
</xml>